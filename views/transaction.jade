extends layout/default_layout

block body
  h1=title
    span.sub #{hash}
    
  div#txInfo
  
  script.
    var hash = '#{hash}';

    function getTransaction(hash) {
      return new Promise((res, rej) => {
        web3.eth.getTransaction(hash, (error, result) => {
          if(error) rej(error);
          else res(result);
        });
      });
    }

    // 트랜잭션의 receipt 를 조회
    function getTransactionReceipt(hash) {
      return new Promise((res, rej) => {
        web3.eth.getTransactionReceipt(hash, (error, result) => {
          if(error) rej(error);
          else res(result);
        });
      });
    }

    async function getTransactionInfo(hash) {

      var tx = await getTransaction(hash);
      console.log(tx);

      var html = '<table>'
        + '<tr><th>TxHash:</th><td>' + tx.hash + '</td></tr>'
        + '<tr><th title="이전에 보낸사람이 수행한 트랜잭션 갯수">Nonce:</th><td>' + tx.nonce + '</td></tr>'
        + '<tr><th>STxReceipt Status:</th><td>' + (tx.transactionIndex===undefined?'Pending':'Success') + '</td></tr>'
        + '<tr><th>Block Height:</th><td><a href="/block/' + tx.blockNumber + '">' + tx.blockNumber + '</a></td></tr>'
        + '<tr><th>Block Hash:</th><td>' + tx.blockHash + '</td></tr>'
        + '<tr><th title="블록에 있는 트랜잭션 인덱스. null이면 pending 상태">Transaction Index:</th><td>' + tx.transactionIndex + '</td></tr>'
        //+ '<tr><th>TimeStamp:</th><td>' + tx.blockHash + '</td></tr>'
        + '<tr><th>From:</th><td><a href="/address/' + tx.from + '">' + tx.from + '</a></td></tr>'
        + '<tr><th>To:</th><td>' + (tx.to==='0x0'?tx.to:'<a href="/address/' + tx.to + '">' + tx.to + '</a>') + '</td></tr>'
        + '<tr><th>Value:</th><td>' + tx.value.toString(10) +  ' Wei (' +  web3.fromWei(tx.value, 'ether').toString(10) + ' Ether)</td></tr>'
        + '<tr><th>Gas Limit:</th><td>' + tx.gas + '</td></tr>'
        + '<tr><th>Gas Price:</th><td>' + tx.gasPrice.toString(10) +  ' Wei (' +  web3.fromWei(tx.gasPrice, 'Gwei').toString(10) + ' Gwei)</td></tr>'
        + '<tr><th>Input Data:</th><td><textarea disabled readonly>' + tx.input + '</textarea></td></tr>'
        + '</table>'; // 

      var txReceipt = await getTransactionReceipt(hash);
      if( !!txReceipt ) {
        console.log('txReceipt: ', txReceipt);
         html += '<h2>Transaction Receipt</h2><table>'
        //-  + '<tr><th>blockHash:</th><td>' + txReceipt.blockHash + '</td></tr>'
        //-  + '<tr><th>blockNumber:</th><td>' + txReceipt.blockNumber + '</td></tr>'
         + '<tr><th>contractAddress:</th><td>' + txReceipt.contractAddress + '</td></tr>'
        //-  + '<tr><th>from:</th><td>' + txReceipt.from + '</td></tr>'
        //-  + '<tr><th>to:</th><td>' + txReceipt.to + '</td></tr>'
         + '<tr><th>cumulativeGasUsed:</th><td>' + txReceipt.cumulativeGasUsed + '</td></tr>'
         + '<tr><th>gasUsed:</th><td>' + txReceipt.gasUsed + '</td></tr>'
         + '<tr><th>status:</th><td>' + txReceipt.status + '</td></tr>'
         + '<tr><th>logsBloom:</th><td>' + txReceipt.logsBloom + '</td></tr>'
         + '<tr><th>logs:</th><td>' + txReceipt.logs + '</td></tr>'
        //-  + '<tr><th>transactionHash:</th><td>' + txReceipt.transactionHash + '</td></tr>'
        //-  + '<tr><th>transactionIndex:</th><td>' + txReceipt.transactionIndex + '</td></tr>'
          + '</table>';
      }

      $("#txInfo").html(html);
    }

    getTransactionInfo(hash);

    
    
    

    
    
